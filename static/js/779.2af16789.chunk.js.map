{"version":3,"file":"static/js/779.2af16789.chunk.js","mappings":"mTAEaA,EAAmBC,EAAAA,EAAAA,IAAH,kIAOhBC,EAAOD,EAAAA,EAAAA,GAAH,mFAMJE,EAAOF,EAAAA,EAAAA,GAAH,qG,SCkCjB,EA1CgB,WACZ,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,IAfAC,EAAAA,EAAAA,YAAU,WACND,GAAa,GACb,IAAME,EAAgB,mCAAG,8GAEMC,EAAAA,EAAAA,IAAWT,GAFjB,OAEXU,EAFW,OAGjBN,EAAWM,GACXJ,GAAa,GAJI,gDAOjBK,IAAAA,OAAAA,QAAwB,4BAPP,yDAAH,qDAUtBH,GACH,GAAE,CAACR,IAECG,EAGL,OACI,+BACI,UAACP,EAAD,YACES,GAAaF,EAAQS,OAAS,IAC5B,SAACd,EAAD,UACKK,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACnB,UAACjB,EAAD,YACA,wBAAKiB,KACL,uBAAID,MAFOD,EADQ,MAQhBT,IAAa,SAACY,EAAA,EAAD,QAI7B,C,mPC7CDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAY,mCAAG,WAAOC,EAAOC,GAAd,uFACHJ,EAAAA,EAAAA,IAAA,gCACIC,EADJ,gCACmCG,EADnC,kBACiDD,EADjD,yBADG,cACpBX,EADoB,yBAInBA,EAASa,KAAKC,SAJK,2CAAH,wDAOZC,EAAW,mCAAG,WAAMH,GAAN,uFACFJ,EAAAA,EAAAA,IAAA,oCACQC,EADR,iBACwBG,IAFtB,cACnBZ,EADmB,yBAIlBA,EAASa,KAAKC,SAJI,2CAAH,sDAOXE,EAAU,mCAAG,WAAM1B,GAAN,uFACDkB,EAAAA,EAAAA,IAAA,iBACXlB,EADW,oBACQmB,EADR,oBADC,cAClBT,EADkB,yBAIjBA,EAASa,MAJQ,2CAAH,sDAMVI,EAAU,mCAAG,WAAM3B,GAAN,uFACDkB,EAAAA,EAAAA,IAAA,iBACXlB,EADW,4BACgBmB,EADhB,oBADC,cAClBT,EADkB,yBAIjBA,EAASa,KAAKK,MAJG,2CAAH,sDAMVnB,EAAU,mCAAG,WAAMT,GAAN,uFACDkB,EAAAA,EAAAA,IAAA,iBACXlB,EADW,4BACgBmB,EADhB,2BADC,cAClBT,EADkB,yBAIjBA,EAASa,KAAKC,SAJG,2CAAH,sDAOhB,SAASK,EAAcC,GAC5B,OAAIA,EAAkB,mCAAN,OAA0CA,GACnD,0RACR,CAEM,SAASC,EAAUC,GACxB,GAAKA,EAIL,OADmBA,EAAOnB,KAAI,SAAAoB,GAAK,OAAIA,EAAMC,IAAV,IACjBC,KAAK,KACxB,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsContainer = styled.div`\n  display: flex;\n  max-width: 1400px;\n  margin: 0 auto;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const Item = styled.li`\n  h2 {\n    margin-bottom: 10px;\n  }\n  p {\n    margin-bottom: 20px;\n  }\n`;\n","import Loader from \"components/Loader/Loader\";\nimport Notiflix from 'notiflix';\nimport { useParams } from \"react-router-dom\";\nimport { getReviews } from \"services/Api\";\nimport { useState, useEffect } from \"react\";\nimport { List, Item, ReviewsContainer } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        setIsLoading(true)\n        const getMoviesReviews = async () => {\n            try {\n                const response = await getReviews(movieId);\n                setReviews(response)\n                setIsLoading(false)\n                \n            } catch (error) {\n                Notiflix.Notify.failure('Sorry, nothing was found')\n            }\n        }\n        getMoviesReviews()\n    }, [movieId])\n\n    if (!reviews) {\n        return;\n    }\n    return (\n        <>\n            <ReviewsContainer>\n            {!isLoading && reviews.length > 0 && (\n                <List>\n                    {reviews.map(({ id, content, author }) => (\n              <Item key={id}>\n              <h2>{author}</h2>\n              <p>{content}</p>\n            </Item>\n                    ) )}\n            </List>\n            )}\n                {isLoading && <Loader />}\n                </ReviewsContainer>\n        </>\n    )\n}\n\nexport default Reviews;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '07f8816ebdb8fd109b409236cc379840';\n\nexport const searchMovies = async (query, page) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getTrending = async page => {\n  const response = await axios.get(\n    `/trending/all/day?api_key=${API_KEY}&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport function getPosterFilm(posterPath) {\n  if (posterPath) return `https://image.tmdb.org/t/p/w300/${posterPath}`;\n  return 'https://th.bing.com/th/id/R.d455faed57de093e87bf5e8d443a939d?rik=mcfV46ZrM7B%2b1w&riu=http%3a%2f%2fthemaryastorcollection.com%2fwp-content%2fgallery-bank%2falbum-thumbs%2fo_1a7dsr5bf1hr34nf1csc1eeb124va.jpg&ehk=zJ6vOJ%2fVm98M8P8VHvK9MVr5JhMaIybLNhey7wmTd2c%3d&risl=&pid=ImgRaw&r=0';\n}\n\nexport function getGenres(genres) {\n  if (!genres) {\n    return;\n  }\n  const genresName = genres.map(genre => genre.name);\n  return genresName.join(', ');\n}\n"],"names":["ReviewsContainer","styled","List","Item","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","getMoviesReviews","getReviews","response","Notiflix","length","map","id","content","author","Loader","axios","API_KEY","searchMovies","query","page","data","results","getTrending","getDetails","getCredits","cast","getPosterFilm","posterPath","getGenres","genres","genre","name","join"],"sourceRoot":""}